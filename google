#!/usr/bin/env python3
from selenium import webdriver
import argparse

# create the parser and add argument to for search input
parser = argparse.ArgumentParser(description="google search from the terminal!")
parser.add_argument("search_input", type=str)
parser.add_argument("-c", help="use chrome browser", action="store_true") # stores True in variable called chrome
parser.add_argument("-f", help="use firefox browser", action="store_true") # stores True in variable called firefox
parser.add_argument("-s", help="use safari browser", action="store_true") # stores True in variable called safari
args = parser.parse_args()

# setting browser
if args.c:
    browser = webdriver.Chrome(service_log_path="/dev/null") # if browser you choose is chrome
elif args.f:
    browser = webdriver.Firefox(service_log_path="/dev/null") # if browser you choose is firefox
elif args.s:
    browser = webdriver.Safari() # if browser you choose is safari
else:
    browser = webdriver.Chrome() # default browser

# service_log_path="/dev/null" is to remove log files after the use of a driver
# make it fullscreen
browser.maximize_window()

# go to google.com
browser.get("http://google.com/")

# find the search bar and put in the search input
searchbar = browser.find_element_by_name("q")
searchbar.send_keys(args.search_input)

# find the search button and click it
searchbutton = browser.find_element_by_css_selector("#tsf > div:nth-child(2) > div.A8SBwf > div.FPdoLc.VlcLAe > center > input.gNO89b")
searchbutton.click()

# end of code. Automation is no longer in progress and the user can do whatever they please
